buildscript {
  repositories {
    add(new org.apache.ivy.plugins.resolver.URLResolver()) {
      name = "GitHub"
      addArtifactPattern "http://cloud.github.com/downloads/[organisation]/[module]/[module]-[revision].[ext]"
    }
  }

  dependencies {
    classpath "bmuschko:gradle-tomcat-plugin:0.8.2"
  }
}

apply plugin: "java"
apply plugin: "war"
apply plugin: "tomcat"
apply plugin: "groovy"
apply plugin: "idea"
apply plugin: "eclipse"

repositories {
  maven {
    url "http://repo.springsource.org/release"
  }
  maven {
    url "http://repo.springsource.org/milestone"
  }
  maven {
    url "http://sass-java.googlecode.com/svn/repo"
  }
  mavenCentral()
}

version = "1.0-SNAPSHOT"
group = "change.me"
projectName = "changeme"

targetCompatibility = "1.6"
sourceCompatibility = "1.6"

configurations {
  all*.exclude group: "commons-logging"
}

war {
  baseName = projectName
}

tomcatRun {
  contextPath = "/"
}

processResources {
  filter(org.apache.tools.ant.filters.ReplaceTokens,
          tokens: [
                  LOGBACK_SYSLOG_HOST: LOGBACK_SYSLOG_HOST,
                  LOGBACK_SYSLOG_PORT: LOGBACK_SYSLOG_PORT,
                  LOGBACK_APPENDER: LOGBACK_APPENDER,
                  LOGBACK_LOG_FILE_LOCATION: LOGBACK_LOG_FILE_LOCATION,
                  HIBERNATE_DIALECT: HIBERNATE_DIALECT,
                  DATABASE_PASSWORD: DATABASE_PASSWORD,
                  DATABASE_URL: DATABASE_URL,
                  DATABASE_USERNAME: DATABASE_USERNAME,
                  DATABASE_DRIVER_CLASSNAME: DATABASE_DRIVER_CLASSNAME,
          ])
}

//*** Versions ***
SPRING_VERSION = "3.1.0.RELEASE"
SPRING_SECURITY_VERSION = "3.1.0.RELEASE"
TILES_VERSION = "2.2.2"
SLF4J_VERSION = "1.6.4"
HIBERNATE_VERSION = "4.0.1.Final"

hibernate = [
        "org.hibernate:hibernate-core:$HIBERNATE_VERSION",
        "org.hibernate:hibernate-validator:4.2.0.Final",
        "org.hibernate:hibernate-entitymanager:$HIBERNATE_VERSION",
        "org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final"]

dependencies {
  groovy("org.codehaus.groovy:groovy-all:1.8.5")
  providedCompile("javax.servlet:servlet-api:2.5", "javax.el:el-api:2.2", "javax.servlet.jsp:jsp-api:2.1")
  testCompile("junit:junit:4.10", "org.easymock:easymock:3.1")
  // ** Hibernate **
  hibernate.collect {
    runtime(it) {
      exclude(group: "cglib", module: "cglib")
      exclude(group: "org.jboss.spec.javax.transaction", module: "jboss-transaction-api_1.1_spec")
    }
  }
  runtime("org.springframework.security.oauth:spring-security-oauth:1.0.0.M5") {
    exclude(group: "org.springframework.security")
    exclude(group: "org.springframework")
  }
  // ** Spring **
  runtime "org.springframework:spring-core:$SPRING_VERSION"
  runtime "org.springframework:spring-context:$SPRING_VERSION"
  runtime "org.springframework:spring-aop:$SPRING_VERSION"
  runtime "org.springframework:spring-aspects:$SPRING_VERSION"
  runtime "org.springframework:spring-tx:$SPRING_VERSION"
  runtime "org.springframework:spring-jdbc:$SPRING_VERSION"
  runtime "org.springframework:spring-orm:$SPRING_VERSION"
  runtime "org.springframework:spring-web:$SPRING_VERSION"
  runtime "org.springframework:spring-webmvc:$SPRING_VERSION"
  runtime "org.springframework:spring-context-support:$SPRING_VERSION"
  runtime "org.springframework:spring-test:$SPRING_VERSION"
  // ** Spring Security **
  runtime "org.springframework.security:spring-security-core:$SPRING_SECURITY_VERSION"
  runtime "org.springframework.security:spring-security-config:$SPRING_SECURITY_VERSION"
  runtime "org.springframework.security:spring-security-web:$SPRING_SECURITY_VERSION"
  // ** Spring Data JPA **
  runtime "org.springframework.data:spring-data-jpa:1.0.2.RELEASE"
  // ** Scribe OAuth **
  runtime "org.scribe:scribe:1.3.0"
  // ** Apache Tiles **
  runtime "org.apache.tiles:tiles-core:$TILES_VERSION"
  runtime "org.apache.tiles:tiles-jsp:$TILES_VERSION"
  // ** SASS **
  runtime "com.sass-lang:sass-java:3.1.1.4"
  // ** Apache Commons **
  runtime "commons-fileupload:commons-fileupload:1.2.2"
  runtime "commons-digester:commons-digester:2.1"
  runtime "commons-lang:commons-lang:2.6"
  runtime "commons-pool:commons-pool:1.6"
  runtime "commons-codec:commons-codec:1.6"
  // ** BoneCP **
  runtime "com.jolbox:bonecp:0.7.1.RELEASE"
  // ** FlyWay **
  runtime "com.googlecode.flyway:flyway-core:1.5"
  // ** SLF4J **
  runtime "org.slf4j:slf4j-api:$SLF4J_VERSION"
  runtime "org.slf4j:jcl-over-slf4j:$SLF4J_VERSION"
  // ** LogBack **
  runtime "ch.qos.logback:logback-core:1.0.0"
  runtime "ch.qos.logback:logback-classic:1.0.0"
  // ** Other **
  runtime "joda-time:joda-time:2.0"
  runtime "org.codehaus.jackson:jackson-mapper-asl:1.9.3"
  runtime "cglib:cglib-nodep:2.2.2"
  // ** Database **
  runtime "org.hsqldb:hsqldb:2.2.4"
  runtime "mysql:mysql-connector-java:5.1.18"
  // ** Javax **
  runtime "javax.mail:mail:1.4.1"
  runtime "javax.activation:activation:1.1.1"
  runtime "javax.servlet:jstl:1.2"
  runtime "javax.transaction:jta:1.1"
  runtime "javax.validation:validation-api:1.0.0.GA"

  def tomcatVersion = "6.0.35"
  tomcat "org.apache.tomcat:catalina:${tomcatVersion}"
  tomcat "org.apache.tomcat:coyote:${tomcatVersion}"
  tomcat "org.apache.tomcat:jasper:${tomcatVersion}"
}
